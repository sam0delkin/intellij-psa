openapi: 3.0.1
info:
  title: PSA
  description: Project Specific Autocomplete documentation
  contact:
    name: sam0delkin
    url: https://github.com/sam0delkin/intellij-psa
    email: me@s-l.dev
  license:
    name: MIT
    url: https://github.com/sam0delkin/intellij-psa?tab=MIT-1-ov-file#readme
  version: 0.0.19
paths:
  /GenerateFileFromTemplate:
    post:
      tags:
      - Methods
      description: "Generate code for file template. For more info, see <a href=\"\
        https://github.com/sam0delkin/intellij-psa/tree/main?tab=readme-ov-file#code-templates\"\
        >documentation</a>. Note that all params are passed via ENV variables"
      operationId: GenerateFileFromTemplate
      parameters:
      - name: PSA_TYPE
        in: query
        description: PSA_TYPE
        schema:
          type: string
          default: GenerateFileFromTemplate
          enum:
          - GenerateFileFromTemplate
      - name: PSA_DEBUG
        in: query
        description: PSA_DEBUG
        schema:
          type: string
          default: "0"
          enum:
          - "1"
          - "0"
      requestBody:
        description: Note that body will be passed as file path to the JSON content
          via `PSA_CONTEXT` ENV variable.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateFileFromTemplateData"
      responses:
        "200":
          description: Template Data Model
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemplateDataModel"
  /GetCompletions:
    post:
      tags:
      - Methods
      description: "Get Completions for the given PSI element. For more info, see\
        \ <a href=\"https://github.com/sam0delkin/intellij-psa?tab=readme-ov-file#completions--goto\"\
        >documentation</a>. Note that all params are passed via ENV variables"
      operationId: getCompletions
      parameters:
      - name: PSA_TYPE
        in: query
        description: Type of the request
        schema:
          type: string
          default: Completion
          enum:
          - Completion
          - BatchCompletion
          - GoTo
          - BatchGoTo
      - name: PSA_DEBUG
        in: query
        description: Is debug enabled or not
        schema:
          type: string
          default: "0"
          enum:
          - "1"
          - "0"
      - name: PSA_LANGUAGE
        in: query
        schema:
          type: string
      - name: PSA_OFFSET
        in: query
        schema:
          type: string
      requestBody:
        description: Note that body will be passed as file path to the JSON content
          via `PSA_CONTEXT` ENV variable.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PsiElementModel"
      responses:
        "200":
          description: Completions Model
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompletionsModel"
  /GetStaticCompletions:
    post:
      tags:
      - Methods
      description: "Retrieve static completions. For more info, see <a href=\"https://github.com/sam0delkin/intellij-psa/tree/main?tab=readme-ov-file#code-templates\"\
        >documentation</a>. Note that all params are passed via ENV variables"
      operationId: GetStaticCompletions
      parameters:
      - name: PSA_TYPE
        in: query
        description: PSA_TYPE
        schema:
          type: string
          default: GetStaticCompletions
          enum:
          - GetStaticCompletions
      - name: PSA_DEBUG
        in: query
        description: PSA_DEBUG
        schema:
          type: string
          default: "0"
          enum:
          - "1"
          - "0"
      responses:
        "200":
          description: Static Completions Data Model
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StaticCompletionsModel"
  /Info:
    post:
      tags:
      - Methods
      description: "Get Info from your PSA script. For more info, see <a href=\"https://github.com/sam0delkin/intellij-psa?tab=readme-ov-file#custom-autocomplete-info\"\
        >documentation</a>. Note that all params are passed via ENV variables"
      operationId: info
      parameters:
      - name: PSA_TYPE
        in: query
        description: PSA_TYPE
        schema:
          type: string
          default: Info
          enum:
          - Info
      - name: PSA_DEBUG
        in: query
        description: PSA_DEBUG
        schema:
          type: string
          default: "0"
          enum:
          - "1"
          - "0"
      responses:
        "200":
          description: Info Model
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoModel"
  /PerformEditorAction:
    post:
      tags:
      - Methods
      description: "Perform some editor action. For more info, see <a href=\"https://github.com/sam0delkin/intellij-psa/tree/main?tab=readme-ov-file#editor-actions\"\
        >documentation</a>. Note that all params are passed via ENV variables"
      operationId: PerformEditorAction
      parameters:
      - name: PSA_TYPE
        in: query
        description: PSA_TYPE
        schema:
          type: string
          default: PerformEditorAction
          enum:
          - PerformEditorAction
      - name: PSA_DEBUG
        in: query
        description: PSA_DEBUG
        schema:
          type: string
          default: "0"
          enum:
          - "1"
          - "0"
      requestBody:
        description: Note that body will be passed as file path to the JSON content
          via `PSA_CONTEXT` ENV variable.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditorActionInputModel"
      responses:
        "200":
          description: Editor Action result
          content:
            text/plain: {}
components:
  schemas:
    FormFieldDataModel:
      type: object
      properties:
        value:
          $ref: "#/components/schemas/JsonElement"
        options:
          type: array
          items:
            type: string
    JsonElement:
      type: object
    TemplateDataModel:
      type: object
      properties:
        content:
          type: string
        contents:
          type: array
          items:
            type: string
        file_name:
          type: string
        file_names:
          type: array
          items:
            type: string
        form_fields:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/FormFieldDataModel"
    GenerateFileFromTemplateData:
      type: object
      properties:
        actionPath:
          type: string
        templateType:
          type: string
        templateName:
          type: string
        originatorFieldName:
          type: string
        formFields:
          type: object
          additionalProperties:
            type: string
    CompletionModel:
      type: object
      properties:
        text:
          type: string
        bold:
          type: boolean
        type:
          type: string
        priority:
          type: number
          format: double
        link:
          type: string
        presentable_text:
          type: string
        tail_text:
          type: string
    CompletionsModel:
      type: object
      properties:
        completions:
          type: array
          items:
            $ref: "#/components/schemas/CompletionModel"
        notifications:
          type: array
          items:
            $ref: "#/components/schemas/NotificationModel"
    NotificationModel:
      type: object
      properties:
        type:
          type: string
        text:
          type: string
    PsiElementModel:
      type: object
      properties:
        id:
          type: string
        elementType:
          type: string
        options:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/PsiElementModelChild"
        elementName:
          type: string
        elementFqn:
          type: string
        elementSignature:
          type: array
          items:
            type: string
        text:
          type: string
        parent:
          $ref: "#/components/schemas/PsiElementModel"
        prev:
          $ref: "#/components/schemas/PsiElementModel"
        next:
          $ref: "#/components/schemas/PsiElementModel"
        textRange:
          $ref: "#/components/schemas/PsiElementModelTextRange"
        filePath:
          type: string
    PsiElementModelChild:
      type: object
      properties:
        model:
          $ref: "#/components/schemas/PsiElementModel"
        string:
          type: string
        array:
          type: array
          items:
            $ref: "#/components/schemas/PsiElementModel"
    PsiElementModelTextRange:
      type: object
      properties:
        startOffset:
          type: integer
          format: int32
        endOffset:
          type: integer
          format: int32
    PsiElementPatternModel:
      type: object
      properties:
        parent:
          $ref: "#/components/schemas/PsiElementPatternModel"
        prev:
          $ref: "#/components/schemas/PsiElementPatternModel"
        next:
          $ref: "#/components/schemas/PsiElementPatternModel"
        with_text:
          type: string
        with_type:
          type: string
        with_options:
          type: object
          additionalProperties:
            type: string
    StaticCompletionModel:
      type: object
      properties:
        name:
          type: string
        title:
          type: string
        patterns:
          type: array
          items:
            $ref: "#/components/schemas/PsiElementPatternModel"
        completions:
          $ref: "#/components/schemas/CompletionsModel"
    StaticCompletionsModel:
      type: object
      properties:
        static_completions:
          type: array
          items:
            $ref: "#/components/schemas/StaticCompletionModel"
    EditorActionModel:
      type: object
      properties:
        name:
          type: string
        title:
          type: string
        source:
          type: string
          enum:
          - editor
          - clipboard
        target:
          type: string
          enum:
          - editor
          - clipboard
          - noting
        group_name:
          type: string
        path_regex:
          type: string
    FileTemplateModel:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum:
          - single_file
          - multiple_file
        title:
          type: string
        fields:
          type: array
          items:
            $ref: "#/components/schemas/FormFieldModel"
        path_regex:
          type: string
        file_count:
          type: integer
          format: int32
    FormFieldModel:
      type: object
      properties:
        name:
          type: string
        title:
          type: string
        type:
          type: string
          enum:
          - Text
          - RichText
          - Checkbox
          - Select
          - Collection
        focused:
          type: boolean
        options:
          type: array
          items:
            type: string
    InfoModel:
      type: object
      properties:
        templates:
          type: array
          items:
            $ref: "#/components/schemas/FileTemplateModel"
        supported_languages:
          type: array
          items:
            type: string
        goto_element_filter:
          type: array
          items:
            type: string
        supports_batch:
          type: boolean
        supports_static_completions:
          type: boolean
        editor_actions:
          type: array
          items:
            $ref: "#/components/schemas/EditorActionModel"
    EditorActionInputModel:
      type: object
      properties:
        text:
          type: string
        action_name:
          type: string
        file_name:
          type: string
